/* Copyright (C) 2023 Harry Clark */

/* SEGA Mega Drive Raspberry Pi Pico Interface */

/* THIS FILE PERTAINS TO THE MAIN FUNCTIONALITY OF THE CONTROLLER */
/* THE STATES IT WILL SHOW WHEN CONNECTING TO THE API AND PROVIDING */
/* FUNCTIONALITY FOR THE QUINTESENTIAL ASPECTS OF THE INTERFACE */

/* DOCUMENTATION USED: https://www.plutiedev.com/controllers */

#ifndef MEGA_DRIVE_CONTROLLER
#define MEGA_DRIVE_CONTROLLER

/* NESTED INCLUDES */

#include "common.h"

/* SYSTEM INCLUDES */

#include <cstdio>

#ifndef CONTROLLER_STATES
#define CONTROLLER_STATES

#define MEGA_DRIVE_DATA_PORT U32
#define MEGA_DRIVE_DATA_PORT_ADDR U32
#define MEGA_DIRVE_BUS_PORT U32
#define MEGA_DRIVE_BUS_PORT_ADDR U32
#define PLAYER_1_DATA_PORT 0xA10003
#define PLAYER_1_CONTROL_PORT 0xA10009
#define PLAYER_2_DATA_PORT 0xA10005
#define PLAYER_2_CONTROL_PORT 0xA1000B

#define MEGA_DRIVE_INPUT (0 << 7)
#define MEGA_DRIVE_PIN (0 << 7)

#endif

typedef struct MEGA_DEVICE
{
	typedef U32* GET_PORT(MEGA_DRIVE_DATA_PORT_ADDR());
	typedef U32* GET_ADDRESS(MEGA_DIRVE_BUS_PORT, MEGA_DRIVE_DATA_PORT());
	typedef U32* GET_ATTACHED_DEVICE(MEGA_DRIVE_DATA_PORT());
	typedef U8* PLAYER_PORT;
	typedef MEGA_DEVICE* GET_DEVICE_TYPE();
};

VOID_FUNCTION(MEGA_DRIVE_INIT);
VOID_FUNCTION(MEGA_DRIVE_PIN_SIGNAL);
VOID_FUNCTION(MEGA_DRIVE_NEXT_SIGNAL);
VOID_FUNCTION(MEGA_DRIVE_CONNECTED);

#endif 
